{"version":3,"file":"static/js/28.6c6015d0.chunk.js","mappings":"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","sources":["Components/Navpar/NavLinks.jsx","Components/Navpar/Navpar.jsx","Components/Forms/LoginContent.jsx","Components/Pages/Login.jsx","Components/hooks/useInput.js"],"sourcesContent":["import React from 'react'\r\nimport {LuBedDouble} from 'react-icons/lu'\r\nimport {AiFillHeart } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nconst NavLinks = () => {\r\n    const fvLength = useSelector(state => state.fvHotels.fvItems?.length)\r\n\r\n    return (\r\n        <div className='navParLinks d-flex justify-content-start align-items-center mt-3'>\r\n                <Link to='/list'>\r\n                    <div className='btn Link d-flex justify-content-center align-items-center  '>\r\n                        <LuBedDouble className='text-white me-2' />\r\n                        <p className='text-white'>Hotels</p>\r\n                    </div>\r\n                </Link>\r\n                <Link to='/favouriteHotels'>\r\n                    <div className='fvButton btn Link d-flex justify-content-center align-items-center   '>\r\n                        <AiFillHeart className='me-2 text-white' />\r\n                        <p className='text-white'>Favourite Hotels</p>\r\n                        <span className='fvLength'>{fvLength}</span>\r\n                    </div>\r\n                </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavLinks","import React from 'react'\r\nimport NavLinks from './NavLinks'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nconst Navpar = () => {\r\n    const userData = useSelector(state => state.fvHotels.userData)\r\n    const isLogin = useSelector(state => state.fvHotels.isLogin)\r\n    return (\r\n        <div className='navPar pt-3'>\r\n            <div className='container '>\r\n                <div className='navParContent ps-2 pe-2 d-flex justify-content-between align-items-center'>\r\n                    <div className='navTitle text-white'>\r\n                        <h4 ><Link className='text-white' to='/Hotels'>Hotels</Link></h4>\r\n                    </div>\r\n                    {isLogin ? \r\n                    <div>\r\n                        <p className='text-white h3 mt-2 bold'>Hello {userData.email.split('@')[0]}</p>\r\n                    </div>\r\n                    :  \r\n                    <div className='navButtons'>\r\n                        <Link to='/signup'><button className='btn bg-white  me-3'>Register</button></Link>\r\n                        <Link to='/login'><button className=' btn bg-white'>Sign in</button></Link>\r\n                    </div>}\r\n                </div>\r\n            <NavLinks />\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navpar","import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport useInput from '../hooks/useInput'\r\nimport { useDispatch } from 'react-redux'\r\nimport {login} from '../RTX/slices/FvHotels'\r\nimport axios from 'axios'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport Loader from '../Loaders/Loader'\r\n\r\nconst LoginContent = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [err , setErr] = useState()\r\n    const [isLoading , setIsLoading] = useState(false)\r\n    const {value: emailValue, isValid: isEmailValid ,isClicked: isEmailClicked,\r\n    inputHandler: emailHandler , inputBlur: emailBlur   } = useInput( e => e.includes('@'))\r\n    const {value: passValue, isValid: isPassValid ,isClicked: isPassClicked,\r\n    inputHandler: passHandler , inputBlur: passBlur   } = useInput((e) => e.trim() !== '') \r\n    const loginFormHandler = async (e) => {\r\n        e.preventDefault()\r\n        if (isEmailValid && isPassValid) {\r\n            setIsLoading(true)\r\n            try {\r\n                const res = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD-1d12rA6rNwYiqjTXNB0RR7GB2V1RDW0' , {\r\n                    email: emailValue,\r\n                    password: passValue,\r\n                    returnSecureToken: true\r\n                })\r\n                toast.success('Login successfully')   \r\n                dispatch(login({\r\n                    userData: {\r\n                        email: emailValue,\r\n                        password: passValue                        \r\n                    },\r\n                    token: res?.data?.idToken\r\n                }))    \r\n                setIsLoading(false)         \r\n                navigate('/Hotels')\r\n            }catch(err) {\r\n                setErr('Your email or password is invalid')\r\n                toast.error('Login Faild')\r\n                setIsLoading(false)\r\n            }\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className='LoginContent'>\r\n            <div className='container'>\r\n                \r\n                <form className='login d-flex flex-column justify-content-start align-items-center' onSubmit={loginFormHandler}>\r\n                    <h1 className='text-center mb-5'>Login</h1>\r\n                    <input  value={emailValue} onChange={emailHandler} onBlur={emailBlur} type='mail' placeholder='Your Email'  />\r\n                    <input value={passValue} onChange={passHandler} onBlur={passBlur} type='password' placeholder='Your Password'  />\r\n                    <p><Link>I don't have account</Link></p>\r\n                    {isEmailClicked && !isEmailValid && <p className='text-danger'>You should type Right Email.</p>}\r\n                    {isPassClicked && !isPassValid && <p className='text-danger'>You cant leave it empty</p>}\r\n                    {err && <p className='text-danger'>{err}</p>}\r\n                    <button  type='submit' className='btn btn-primary'>Login</button>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <ToastContainer\r\n            position=\"top-left\"\r\n            autoClose={1000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            theme=\"dark\"\r\n        />   \r\n        {isLoading && <Loader />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginContent","import React from 'react'\r\nimport Navpar from '../Navpar/Navpar'\r\nimport LoginContent from '../Forms/LoginContent'\r\n\r\nconst Login = () => {\r\n    return (\r\n        <>\r\n        <Navpar />\r\n        <LoginContent />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import { useState } from 'react'\r\n\r\nconst useInput = (fun) => {\r\n    const [isClicked , setIsClicked] = useState(false)\r\n    const [value , setValue] = useState('')\r\n    let isValid = fun(value)    \r\n    const inputHandler = (e) => {\r\n        setIsClicked(true)\r\n        setValue(e.target.value)\r\n    }\r\n    const inputBlur = () => {\r\n        setIsClicked(true)\r\n    }\r\n    const inputReset =() => {\r\n        setIsClicked(false)\r\n        setValue('')\r\n    }\r\n    return {\r\n        value,\r\n        setValue,\r\n        isClicked,\r\n        isValid,\r\n        inputHandler,\r\n        inputBlur,\r\n        inputReset\r\n    }\r\n}\r\n\r\nexport default useInput"],"names":["fvLength","useSelector","state","_state$fvHotels$fvIte","fvHotels","fvItems","length","_jsxs","className","children","_jsx","Link","to","LuBedDouble","AiFillHeart","userData","isLogin","email","split","NavLinks","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","err","setErr","_useState3","_useState4","isLoading","setIsLoading","_useInput","useInput","e","includes","emailValue","value","isEmailValid","isValid","isEmailClicked","isClicked","emailHandler","inputHandler","emailBlur","inputBlur","_useInput2","trim","passValue","isPassValid","isPassClicked","passHandler","passBlur","loginFormHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_res$data","res","wrap","_context","prev","next","preventDefault","axios","post","password","returnSecureToken","sent","toast","success","login","token","data","idToken","t0","error","stop","_x","apply","arguments","_Fragment","onSubmit","onChange","onBlur","type","placeholder","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Loader","Navpar","LoginContent","fun","setIsClicked","setValue","target","inputReset"],"sourceRoot":""}